{"variants":[{"paths":["\/documentation\/fitheightsheet\/tutorial"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"article","schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"The FitHeightSheet package is as easy as pie and just as versatile! It works similarly to the native SwiftUI sheet but with some naming tweaks.","type":"text"}],"sections":[],"identifier":{"url":"doc:\/\/fitheightsheet.FitHeightSheet\/documentation\/FitHeightSheet\/Tutorial","interfaceLanguage":"swift"},"seeAlsoSections":[{"identifiers":["doc:\/\/fitheightsheet.FitHeightSheet\/documentation\/FitHeightSheet\/KeyFeatures"],"title":"Essentials","anchor":"Essentials","generated":true}],"metadata":{"role":"article","title":"Tutorial","modules":[{"name":"FitHeightSheet"}],"roleHeading":"Article"},"hierarchy":{"paths":[["doc:\/\/fitheightsheet.FitHeightSheet\/documentation\/FitHeightSheet"]]},"primaryContentSections":[{"kind":"content","content":[{"level":2,"type":"heading","text":"Presenting a FitHeightSheet","anchor":"Presenting-a-FitHeightSheet"},{"text":"State-based control","type":"heading","anchor":"State-based-control","level":3},{"inlineContent":[{"text":"Just like native SwiftUI sheet, you can show\/hide fit height sheet via ","type":"text"},{"type":"codeVoice","code":"fitHeightSheet(isPresented:content:)"},{"text":" modifire.","type":"text"}],"type":"paragraph"},{"code":["struct HomeView {","  @State private var showSheet = false","  ","  var body: some View {","    Button(\"Show sheet\") {","      showSheet.toggle()","    }","    \/\/ Just like sheet(isPresented:content:)","    .fitHeightSheet(isPresented: $showSheet) {","      \/\/ Your sheet here...","      Sheet()","    }","  }","}"],"type":"codeListing","syntax":"swift"},{"anchor":"Item-Based-Control","type":"heading","level":3,"text":"Item-Based Control"},{"inlineContent":[{"type":"text","text":"Just like native SwiftUI sheet, you can show\/hide fit height sheet via "},{"code":"fitHeightSheet(item:content:)","type":"codeVoice"},{"type":"text","text":" modifire."}],"type":"paragraph"},{"code":["struct HomeView {","  @State private var greetingText: String? = nil","  ","  var body: some View {","    Button(\"Show sheet\") {","      greetingText = \"Hello ðŸ‘‹\"","    }","    \/\/ Just like sheet(item:content:)","    .fitHeightSheet(item: $greetingText) {","      \/\/ Your sheet here...","      Sheet(greeting: greetingText)","    }","  }","}"],"type":"codeListing","syntax":"swift"},{"anchor":"Customisation-options","type":"heading","text":"Customisation options","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can customize backdrop style, presentation and dismissal timing curve, top content inset, and dismiss threshold. If you want to do something once the sheet is dismissed, you can write your logic inside "},{"code":"onDismiss","type":"codeVoice"},{"type":"text","text":" clsoure."}]},{"name":"Note","content":[{"inlineContent":[{"type":"text","text":"Please be advised that "},{"type":"codeVoice","code":"onAppear"},{"type":"text","text":" modifire on your custom sheet might give you unexpected results. I would recomend you to use "},{"type":"codeVoice","code":"onChange"},{"type":"text","text":" modifire instead."}],"type":"paragraph"}],"style":"note","type":"aside"},{"code":["struct HomeView {","  @State private var showSheet = false","  ","  var body: some View {","    Button(\"Show sheet\") {","      showSheet.toggle()","    }","    .fitHeightSheet(isPresented: $showSheet) {","      Sheet()","    }","    .onChange(of: showSheet) { isPresented in","      guard isPresented else { return }","      \/\/ Do your sheet's onAppear logic here","    }","  }","}"],"type":"codeListing","syntax":"swift"},{"type":"heading","level":2,"text":"Dismissing a FitHeightSheet","anchor":"Dismissing-a-FitHeightSheet"},{"inlineContent":[{"type":"text","text":"Dismissing a FitHeightSheet is as easy as dismissing a SwiftUI sheet. All you need is "},{"code":"fitHeightSheetDismiss","type":"codeVoice"},{"text":" environment value and you can call it just like SwiftUI sheet.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["struct Sheet {","  @Environment(\\.fitHeightSheetDismiss) private var dismiss","  ","  var body: some View {","    VStack {","      \/\/ Your sheet content here","      Button(\"Close\") {","        dismiss()","      }","    }","  }","}"]}]}],"references":{"doc://fitheightsheet.FitHeightSheet/documentation/FitHeightSheet/KeyFeatures":{"abstract":[{"type":"text","text":"The FitHeightSheet package enhances SwiftUI applications by providing a sheet that fits precisely around its content."}],"kind":"article","identifier":"doc:\/\/fitheightsheet.FitHeightSheet\/documentation\/FitHeightSheet\/KeyFeatures","type":"topic","role":"article","title":"Key Features","url":"\/documentation\/fitheightsheet\/keyfeatures"},"doc://fitheightsheet.FitHeightSheet/documentation/FitHeightSheet":{"type":"topic","title":"FitHeightSheet","abstract":[{"type":"text","text":"FitHeightSheet lets you present a sheet with a dynamic height based on its content.."}],"identifier":"doc:\/\/fitheightsheet.FitHeightSheet\/documentation\/FitHeightSheet","url":"\/documentation\/fitheightsheet","kind":"symbol","role":"collection"}}}